[{"/Users/yadhapdahal/Desktop/REACT APPS/demography/src/index.js":"1","/Users/yadhapdahal/Desktop/REACT APPS/demography/src/App.js":"2","/Users/yadhapdahal/Desktop/REACT APPS/demography/src/reportWebVitals.js":"3","/Users/yadhapdahal/Desktop/REACT APPS/demography/src/components/search/Search.jsx":"4","/Users/yadhapdahal/Desktop/REACT APPS/demography/src/components/charts/Chart.jsx":"5"},{"size":543,"mtime":1607547877000,"results":"6","hashOfConfig":"7"},{"size":3098,"mtime":1607696187000,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1607538268000,"results":"9","hashOfConfig":"7"},{"size":2374,"mtime":1607693905000,"results":"10","hashOfConfig":"7"},{"size":1297,"mtime":1607695003000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"16j8b6p",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"/Users/yadhapdahal/Desktop/REACT APPS/demography/src/index.js",[],["26","27"],"/Users/yadhapdahal/Desktop/REACT APPS/demography/src/App.js",["28"],"import React, { Component } from \"react\";\nimport validator from \"validator\";\nimport _ from \"lodash\";\nimport axios from \"axios\";\n\nimport \"./App.css\";\nimport Search from \"./components/search/Search\";\nimport Chart from \"./components/charts/Chart\";\nclass App extends Component {\n  //component states\n  state = {\n    stateName: \"\",\n    allStates: \"\",\n    houseHoldInfo: \"\",\n    displayState: \"\",\n    loadChart: false\n  };\n\n  //Lifecycles\n  //component on load\n  componentDidMount() {\n    // Making test api call\n    axios\n      .get(\"https://api.census.gov/data/2010/dec/sf1?get=NAME&for=state:*\")\n      .then(response => {\n        // handle success\n        response.status === 200\n          ? this.setState({ allStates: response.data })\n          : this.setState({ error: \"Incorrect state. check spelling\" });\n      })\n      .catch(err => {\n        // handle error\n        // console.log(\"Here\" + err);\n        this.setState({ error: \"Service Unavailable\" });\n      })\n      .then(function() {\n        // always executed\n      });\n  }\n\n  getStateCodes = () => {};\n  //functions\n  //Handle change\n  onChange = e => {\n    this.setState({ stateName: e.target.value });\n  };\n\n  // Api call to fetch househodl info\n  fetchHouseHoldInfo = stateCode => {\n    // const apiKey = process.env.REACT_APP_US_CENSUS;\n    axios\n      .get(\n        `https://api.census.gov/data/2019/acs/acs1/profile?get=NAME,DP02_0001E&for=county:*&in=state:${stateCode}&key=${process.env.REACT_APP_US_CENSUS}`\n      )\n      .then(response => {\n        // handle success\n        response.status === 200\n          ? this.setState({ houseHoldInfo: response.data, loadChart: true })\n          : this.setState({ houseHoldInfo: null });\n      })\n      .catch(err => {\n        // handle error\n        this.setState({ error: \"Service is not available\" });\n      });\n  };\n\n  //Handle submit - fixes case issue\n  hadndleSubmit = event => {\n    event.preventDefault();\n    validator.isEmpty(this.state.stateName)\n      ? this.setState({ error: \"Please provide state\" })\n      : this.setState({ error: null });\n\n    if (validator.isEmpty(this.state.stateName)) {\n      this.setState({ error: \"Please provide state\" });\n    } else {\n      this.setState({ error: null });\n      let stateName = _.startCase(_.toLower(this.state.stateName));\n      // stateName = _.upperFirst(stateName);\n      console.log(stateName, \"*******\");\n      let stateCode;\n      const state = this.state.allStates.filter(state => state[0] == stateName);\n      if (state.length === 0) {\n        this.setState({ error: \"Invalid  state\", displayState: null });\n      } else {\n        this.setState({ displayState: stateName });\n        stateCode = state[0][1];\n        this.fetchHouseHoldInfo(stateCode);\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Search\n          hadndleSubmit={this.hadndleSubmit}\n          onChange={this.onChange}\n          state={this.state}\n        />\n        {this.state.loadChart ? (\n          <Chart houseHoldInfo={this.state.houseHoldInfo} />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/yadhapdahal/Desktop/REACT APPS/demography/src/reportWebVitals.js",[],"/Users/yadhapdahal/Desktop/REACT APPS/demography/src/components/search/Search.jsx",["29"],"import React, { Component } from \"react\";\nimport \"./search.css\";\n\nclass Search extends Component {\n  render() {\n    const { state, onChange, hadndleSubmit } = this.props;\n    console.log(state.houseHoldInfo);\n    let totalPopulation = [];\n    if (state.houseHoldInfo.length > 0) {\n      state.houseHoldInfo.map((house, i) => {\n        if (i !== 0) {\n          totalPopulation.push(parseInt(house[1]));\n        }\n      });\n    }\n\n    totalPopulation = totalPopulation.reduce((a, b) => a + b, 0);\n\n    return (\n      <div className=\"search-form \">\n        <form className=\"row\" onSubmit={hadndleSubmit}>\n          <div className=\"col-auto\">\n            <input\n              type=\"text\"\n              className={\n                state.error ? \"form-control is-invalid\" : \" form-control\"\n              }\n              placeholder=\"Type your state\"\n              onChange={onChange}\n            />\n            <div\n              id=\"validationServer05Feedback\"\n              className=\"invalid-feedback text-left\"\n            >\n              {state.error}\n            </div>\n          </div>\n\n          <div className=\"col-auto\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </div>\n          <div className=\"col-md-8\">\n            <div className=\"text-right boldtext\">2017 US Census</div>\n            <div className=\"text-right\">\n              {state.displayState ? (\n                <h6>\n                  <span className=\"boldertext\">{state.displayState}</span>\n                  {state.houseHoldInfo.length > 0\n                    ? \" - \" + totalPopulation + \" Households\"\n                    : null}\n                </h6>\n              ) : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n\n//To dos\n//Form validation\n//handle incorrect user input by displaying error in UI\n//Handle err from response for both functions\n//store household info in state\n// store recent state in local storage and make it a default state - try if you can get geocode and do this instead\n//refactor code and make it moduler by breaking it into different files\n//use chart js to display data in UI\n//2 letter states not working\n//clear input after search\n//Error handling when no internet or other issue - handle it such user cannot enter serach when such issueexist\n","/Users/yadhapdahal/Desktop/REACT APPS/demography/src/components/charts/Chart.jsx",["30","31"],"import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nexport default function Chart(props) {\n  const { houseHoldInfo } = props;\n  let counties = [];\n  let houseHolds = [];\n\n  houseHoldInfo.map((house, i) => {\n    if (i !== 0) {\n      counties.push(house[0].split(\",\")[0]);\n    }\n  });\n\n  houseHoldInfo.map((house, i) => {\n    if (i !== 0) {\n      houseHolds.push(house[1]);\n    }\n  });\n  return (\n    <div className=\"barchart\">\n      <Bar\n        data={{\n          labels: counties,\n          datasets: [\n            {\n              label: \"Households  by counties\",\n              data: houseHolds,\n              backgroundColor: \"red\"\n            }\n          ]\n        }}\n        height={400}\n        width={1040}\n        options={{\n          plugins: {\n            datalabels: {\n              display: \"auto\",\n              align: \"top\",\n              anchor: \"end\",\n              color: \"#000000\",\n              font: {\n                size: 10\n              }\n            }\n          },\n          maintainAspectRatio: false,\n          tooltips: { enabled: true },\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true\n                }\n              }\n            ]\n          }\n        }}\n      />\n    </div>\n  );\n}\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":82,"column":67,"nodeType":"38","messageId":"39","endLine":82,"endColumn":69},{"ruleId":"40","severity":1,"message":"41","line":10,"column":42,"nodeType":"42","messageId":"43","endLine":10,"endColumn":44},{"ruleId":"40","severity":1,"message":"41","line":9,"column":32,"nodeType":"42","messageId":"43","endLine":9,"endColumn":34},{"ruleId":"40","severity":1,"message":"41","line":15,"column":32,"nodeType":"42","messageId":"43","endLine":15,"endColumn":34},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]