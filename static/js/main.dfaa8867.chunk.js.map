{"version":3,"sources":["components/search/Search.jsx","components/charts/Chart.jsx","App.js","reportWebVitals.js","index.js"],"names":["Search","this","props","state","onChange","hadndleSubmit","console","log","houseHoldInfo","totalPopulation","length","map","house","i","push","parseInt","reduce","a","b","className","onSubmit","type","error","placeholder","id","displayState","Component","Chart","counties","houseHolds","split","data","labels","datasets","label","backgroundColor","height","width","options","plugins","datalabels","display","align","anchor","color","font","size","maintainAspectRatio","tooltips","enabled","scales","yAxes","ticks","beginAtZero","App","stateName","allStates","loadChart","getStateCodes","e","setState","target","value","fetchHouseHoldInfo","stateCode","axios","get","process","then","response","status","catch","err","event","preventDefault","validator","isEmpty","_","startCase","toLower","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfaa8867.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./search.css\";\n\nclass Search extends Component {\n  render() {\n    const { state, onChange, hadndleSubmit } = this.props;\n    console.log(state.houseHoldInfo);\n    let totalPopulation = [];\n    if (state.houseHoldInfo.length > 0) {\n      state.houseHoldInfo.map((house, i) => {\n        if (i !== 0) {\n          totalPopulation.push(parseInt(house[1]));\n        }\n      });\n    }\n\n    totalPopulation = totalPopulation.reduce((a, b) => a + b, 0);\n\n    return (\n      <div className=\"search-form \">\n        <form className=\"row\" onSubmit={hadndleSubmit}>\n          <div className=\"col-auto\">\n            <input\n              type=\"text\"\n              className={\n                state.error ? \"form-control is-invalid\" : \" form-control\"\n              }\n              placeholder=\"Type your state\"\n              onChange={onChange}\n            />\n            <div\n              id=\"validationServer05Feedback\"\n              className=\"invalid-feedback text-left\"\n            >\n              {state.error}\n            </div>\n          </div>\n\n          <div className=\"col-auto\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </div>\n          <div className=\"col-md-8\">\n            <div className=\"text-right boldtext\">2017 US Census</div>\n            <div className=\"text-right\">\n              {state.displayState ? (\n                <h6>\n                  <span className=\"boldertext\">{state.displayState}</span>\n                  {state.houseHoldInfo.length > 0\n                    ? \" - \" + totalPopulation + \" Households\"\n                    : null}\n                </h6>\n              ) : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n\n//To dos\n//Form validation\n//handle incorrect user input by displaying error in UI\n//Handle err from response for both functions\n//store household info in state\n// store recent state in local storage and make it a default state - try if you can get geocode and do this instead\n//refactor code and make it moduler by breaking it into different files\n//use chart js to display data in UI\n//2 letter states not working\n//clear input after search\n//Error handling when no internet or other issue - handle it such user cannot enter serach when such issueexist\n","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nexport default function Chart(props) {\n  const { houseHoldInfo } = props;\n  let counties = [];\n  let houseHolds = [];\n\n  houseHoldInfo.map((house, i) => {\n    if (i !== 0) {\n      counties.push(house[0].split(\",\")[0]);\n    }\n  });\n\n  houseHoldInfo.map((house, i) => {\n    if (i !== 0) {\n      houseHolds.push(house[1]);\n    }\n  });\n  return (\n    <div className=\"barchart\">\n      <Bar\n        data={{\n          labels: counties,\n          datasets: [\n            {\n              label: \"Households  by counties\",\n              data: houseHolds,\n              backgroundColor: \"red\"\n            }\n          ]\n        }}\n        height={400}\n        width={1040}\n        options={{\n          plugins: {\n            datalabels: {\n              display: \"auto\",\n              align: \"top\",\n              anchor: \"end\",\n              color: \"#000000\",\n              font: {\n                size: 10\n              }\n            }\n          },\n          maintainAspectRatio: false,\n          tooltips: { enabled: true },\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true\n                }\n              }\n            ]\n          }\n        }}\n      />\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport validator from \"validator\";\nimport _ from \"lodash\";\nimport axios from \"axios\";\n\nimport \"./App.css\";\nimport Search from \"./components/search/Search\";\nimport Chart from \"./components/charts/Chart\";\nclass App extends Component {\n  //component states\n  state = {\n    stateName: \"\",\n    allStates: \"\",\n    houseHoldInfo: \"\",\n    displayState: \"\",\n    loadChart: false\n  };\n\n  //Lifecycles\n  //component on load\n  componentDidMount() {\n    // Making test api call\n    axios\n      .get(\"https://api.census.gov/data/2010/dec/sf1?get=NAME&for=state:*\")\n      .then(response => {\n        // handle success\n        response.status === 200\n          ? this.setState({ allStates: response.data })\n          : this.setState({ error: \"Incorrect state. check spelling\" });\n      })\n      .catch(err => {\n        // handle error\n        // console.log(\"Here\" + err);\n        this.setState({ error: \"Service Unavailable\" });\n      })\n      .then(function() {\n        // always executed\n      });\n  }\n\n  getStateCodes = () => {};\n  //functions\n  //Handle change\n  onChange = e => {\n    this.setState({ stateName: e.target.value });\n  };\n\n  // Api call to fetch househodl info\n  fetchHouseHoldInfo = stateCode => {\n    // const apiKey = process.env.REACT_APP_US_CENSUS;\n    axios\n      .get(\n        `https://api.census.gov/data/2019/acs/acs1/profile?get=NAME,DP02_0001E&for=county:*&in=state:${stateCode}&key=${process.env.REACT_APP_US_CENSUS}`\n      )\n      .then(response => {\n        // handle success\n        response.status === 200\n          ? this.setState({ houseHoldInfo: response.data, loadChart: true })\n          : this.setState({ houseHoldInfo: null });\n      })\n      .catch(err => {\n        // handle error\n        this.setState({ error: \"Service is not available\" });\n      });\n  };\n\n  //Handle submit - fixes case issue\n  hadndleSubmit = event => {\n    event.preventDefault();\n    validator.isEmpty(this.state.stateName)\n      ? this.setState({ error: \"Please provide state\" })\n      : this.setState({ error: null });\n\n    if (validator.isEmpty(this.state.stateName)) {\n      this.setState({ error: \"Please provide state\" });\n    } else {\n      this.setState({ error: null });\n      let stateName = _.startCase(_.toLower(this.state.stateName));\n      // stateName = _.upperFirst(stateName);\n      console.log(stateName, \"*******\");\n      let stateCode;\n      const state = this.state.allStates.filter(state => state[0] == stateName);\n      if (state.length === 0) {\n        this.setState({ error: \"Invalid  state\", displayState: null });\n      } else {\n        this.setState({ displayState: stateName });\n        stateCode = state[0][1];\n        this.fetchHouseHoldInfo(stateCode);\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Search\n          hadndleSubmit={this.hadndleSubmit}\n          onChange={this.onChange}\n          state={this.state}\n        />\n        {this.state.loadChart ? (\n          <Chart houseHoldInfo={this.state.houseHoldInfo} />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}